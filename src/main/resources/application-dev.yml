server:
  port: 8888
  servlet:
    context-path: /ActivityDemo
  tomcat:
    basedir: /opt/service/tmp


logging:
  config: classpath:log4j2-${spring.profiles.active}.yml   # 配置log4j2读取的配置文件
  file: ../springlogs/productcenter.log



spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    platform: mysql
    url: jdbc:mysql://127.0.0.1:3306/testactiviti?serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: 135795
    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT1FROMDUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    filters: stat,wall,log4j
    logSlowSql: true
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    open-in-view: false
  data:
    elasticsearch:
      cluster-name: my-elasticsearch
      cluster-nodes: 192.168.1.165:9300
      repositories.enabled: true

  #整合stream rocketmq
  cloud:
    stream:
      rocketmq:
        binder:
          name-server: 127.0.0.1:9876
        bindings:
          outputTX:
            producer:
              group: myTXProducerGroup
              transactional: true
          inputTX:
            consumer:
              broadcasting: false
          my_input2:
            consumer:
              tags: myTag
              keys: myKey
      bindings:
        #消费者
        input:
          destination: test-topic
          contentType: text/plain
          group: test-group
        #生产者
        output:
          # 指定topic
          destination: test-topic
          contentType: text/plain
          group: test-group
        #自定义消息1
        my_input1:
          destination: test-topic1
          contentType: text/plain
          group: test-group1
        my_output1:
          # 指定topic
          destination: test-topic1
          contentType: text/plain
          group: test-group1
        #自定义消息2
        my_input2:
          destination: test-topic2
          contentType: application/json
          group: test-group2
        my_output2:
          # 指定topic
          destination: test-topic2
          contentType: application/json
          group: test-group2

        #事务消息application/json
        inputTX:
          destination: TransactionTopic
          contentType: text/plain
          group: transaction-group
        outputTX:
          # 指定topic
          destination: TransactionTopic
          contentType: text/plain

